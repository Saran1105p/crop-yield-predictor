"use client"

import type React from "react"

import { ArrowLeft, Upload, FileSpreadsheet, CheckCircle } from "lucide-react"
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { useState } from "react"

export default function UploadAuthenticatedPage() {
  const [dragActive, setDragActive] = useState(false)
  const [file, setFile] = useState<File | null>(null)

  const handleDrag = (e: React.DragEvent) => {
    e.preventDefault()
    e.stopPropagation()
    if (e.type === "dragenter" || e.type === "dragover") {
      setDragActive(true)
    } else if (e.type === "dragleave") {
      setDragActive(false)
    }
  }

  const handleDrop = (e: React.DragEvent) => {
    e.preventDefault()
    e.stopPropagation()
    setDragActive(false)

    if (e.dataTransfer.files && e.dataTransfer.files[0]) {
      setFile(e.dataTransfer.files[0])
    }
  }

  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files[0]) {
      setFile(e.target.files[0])
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-950 via-blue-950 to-slate-950 text-white">
      {/* Header */}
      <header className="border-b border-slate-800 bg-slate-950/95 backdrop-blur">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex h-16 items-center justify-between">
            <Button asChild variant="ghost" className="text-slate-300 hover:text-white">
              <Link href="/" className="flex items-center space-x-2">
                <ArrowLeft className="h-4 w-4" />
                <span>Back to Home</span>
              </Link>
            </Button>
            <div className="text-lg font-semibold bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent">
              AutoDash AI
            </div>
          </div>
        </div>
      </header>

      {/* Upload Content */}
      <section className="py-16 px-4 sm:px-6 lg:px-8">
        <div className="container mx-auto max-w-2xl">
          <div className="text-center mb-8">
            <h1 className="text-4xl font-bold mb-4 text-slate-300">Upload Your Dataset</h1>
            <p className="text-lg text-slate-400">
              Ready to analyze! Upload your CSV or Excel file to get started with intelligent insights.
            </p>
          </div>

          {/* Upload Card */}
          <Card className="bg-slate-800 border-slate-700 mb-8">
            <CardHeader className="text-center">
              <div className="flex justify-center mb-4">
                <div className="p-4 bg-blue-600/20 rounded-full">
                  <FileSpreadsheet className="h-12 w-12 text-blue-400" />
                </div>
              </div>
              <CardTitle className="text-2xl text-slate-300">Upload Your Data File</CardTitle>
              <CardDescription className="text-slate-400">
                Drag and drop or click to select your CSV or Excel file (up to 100MB)
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div
                className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
                  dragActive
                    ? "border-blue-500 bg-blue-500/10"
                    : file
                      ? "border-green-500 bg-green-500/10"
                      : "border-slate-600 hover:border-blue-500"
                }`}
                onDragEnter={handleDrag}
                onDragLeave={handleDrag}
                onDragOver={handleDrag}
                onDrop={handleDrop}
              >
                {file ? (
                  <div className="space-y-4">
                    <CheckCircle className="h-12 w-12 text-green-400 mx-auto" />
                    <div>
                      <p className="text-slate-300 font-medium">{file.name}</p>
                      <p className="text-sm text-slate-400">{(file.size / 1024 / 1024).toFixed(2)} MB</p>
                    </div>
                    <Button
                      onClick={() => setFile(null)}
                      variant="outline"
                      className="border-slate-600 text-slate-300 hover:bg-slate-700"
                    >
                      Choose Different File
                    </Button>
                  </div>
                ) : (
                  <div className="space-y-4">
                    <Upload className="h-12 w-12 text-slate-400 mx-auto" />
                    <div>
                      <p className="text-slate-300 mb-2">Drag and drop your file here</p>
                      <p className="text-sm text-slate-400 mb-4">or click to browse</p>
                    </div>
                    <div>
                      <input
                        type="file"
                        accept=".csv,.xlsx,.xls"
                        onChange={handleFileSelect}
                        className="hidden"
                        id="file-upload"
                      />
                      <Button asChild className="bg-blue-600 hover:bg-blue-700">
                        <label htmlFor="file-upload" className="cursor-pointer">
                          Choose File
                        </label>
                      </Button>
                    </div>
                  </div>
                )}
              </div>

              {file && (
                <div className="text-center">
                  <Button asChild size="lg" className="bg-green-600 hover:bg-green-700">
                    <Link href="/dataset-success" className="flex items-center space-x-2">
                      <Upload className="h-4 w-4" />
                      <span>Analyze Dataset</span>
                    </Link>
                  </Button>
                </div>
              )}
            </CardContent>
          </Card>

          {/* Features */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <Card className="bg-slate-800 border-slate-700">
              <CardHeader>
                <CardTitle className="text-slate-300 text-lg">What We Support</CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="text-slate-400 space-y-2">
                  <li>• CSV files (.csv)</li>
                  <li>• Excel files (.xlsx, .xls)</li>
                  <li>• Files up to 100MB</li>
                  <li>• UTF-8 and other encodings</li>
                </ul>
              </CardContent>
            </Card>

            <Card className="bg-slate-800 border-slate-700">
              <CardHeader>
                <CardTitle className="text-slate-300 text-lg">AI-Powered Analysis</CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="text-slate-400 space-y-2">
                  <li>• Automatic data cleaning</li>
                  <li>• Smart type detection</li>
                  <li>• Missing value analysis</li>
                  <li>• Instant visualizations</li>
                </ul>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>
    </div>
  )
}
